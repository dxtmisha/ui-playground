export const cssSelector = [
  // Selector
  'root',

  'dir', // который выбирает элементы на основе направления текста в них
  'blank', // находит элементы, у которых либо вообще нет дочерних узлов, либо только пустые текстовые узлы
  'empty', // находит любой элемент, у которого нет потомков
  'is', // выбирает любой элемент, который может быть выбран одним из селекторов в этом списке
  'has', // будут применены, если хотя бы один из относительных селекторов, переданных в качестве аргумента, соответствует хотя бы одному элементу
  'where', // в качестве аргумента принимает список селекторов и выбирает только те элементы, которые могут быть выбраны из переданного списка
  'not',

  'first-child',
  'first-of-type', // находит первого потомка своего типа среди детей родителя
  'last-child',
  'last-of-type',
  'only-child', // находит любой элемент, являющийся единственным потомком родителя
  'only-of-type',
  'nth-child',
  'nth-of-type',
  'nth-col',
  'nth-last-child',
  'nth-last-of-type',
  'nth-last-col',

  'lang', // выбирает элементы основываясь на языке, на котором они определены

  'target', // представляет уникальный элемент (целевой элемент) с подходящим id
  'defined', // находит любой элемент, который был определён, включая любой стандартный элемент, встроенный в браузер

  'current', // это временной псевдокласс, который представляет элемент или предка элемента, который отображается в данный момент
  'future', // это временной псевдокласс, который будет соответствовать любому элементу, который появляется полностью после элемента, соответствующего

  'host',
  'host-context',

  // Input
  'placeholder-shown',

  'autofill', // соответствует, когда значение input автоматически заполняется браузером
  'default', // находит элемент формы, установленный по умолчанию для группы связанных элементов

  'read-only',
  'read-write', // находит элементы, доступные для редактирования пользователем, такие как текстовые поля

  'required',
  'optional', // находит любые <input> элементы, у которых не установлен атрибут required

  'indeterminate', // находит элементы в неопределённом состоянии

  'checked',
  'in-range', // находит элементы, значение которых соответствует указанному для них диапазону ограничений
  'out-of-range', // находит элементы, значение которых находится вне диапазона их ограничений

  'valid',
  'invalid', // находит любые input, контент которых не проходит валидацию

  // Link
  'any-link', // представляет собой элемент, который действует как исходный якорь гиперссылки, независимо от того, была ли она посещена
  'link', // позволяет вам выбирать ссылки внутри элементов
  'local-link', // собой ссылку на тот же документ
  'visited', // позволяет вам выбирать ссылки, которые были посещены

  // Status
  'fullscreen',

  'hover',
  'active',
  'focus',
  'focus-visible',
  'focus-within', // соответствует элементу, который находится в фокусе сам или содержит элемент, который находится в фокусе
  'enabled', // находит любой включённый элемент
  'disabled'
]
