export const cssLayout: string[] = [
  'direction',
  'appearance',
  'aspect-ratio',
  'aspect-ratio-width',
  'aspect-ratio-height',
  'position',
  'absolute',
  'absoluteAfter',
  'z-index',
  'top',
  'right',
  'bottom',
  'left',
  'inset',
  'inset-block',
  'inset-block-start',
  'inset-block-end',
  'inset-inline',
  'inset-inline-start',
  'inset-inline-end',
  'display',
  'visibility',
  'float',
  'clear',
  'overflow',
  'overflow-x',
  'overflow-y'
]

export const cssFlexbox: string[] = [
  'flex',
  'flex-position',
  'flex-flow',
  'flex-basis',
  'flex-direction',
  'flex-grow',
  'flex-shrink',
  'flex-wrap',
  'flex-dynamic',
  'grid',
  'grid-area',
  'grid-gap',
  'grid-auto-flow',
  'grid-auto-columns',
  'grid-auto-rows',
  'grid-template',
  'grid-template-areas',
  'grid-template-columns',
  'grid-template-rows',
  'grid-column',
  'grid-column-start',
  'grid-column-end',
  'grid-column-gap',
  'grid-row',
  'grid-row-start',
  'grid-row-end',
  'grid-row-gap',
  'gap',
  'align-content',
  'align-items',
  'align-self',
  'justify-content',
  'order'
]

export const cssColumns: string[] = [
  'columns',
  'column-count',
  'column-width',
  'column-fill',
  'column-gap',
  'column-span',
  'column-rule',
  'column-rule-width',
  'column-rule-color',
  'column-rule-style'
]

export const cssSpacing: string[] = [
  'margin',
  'margin-top',
  'margin-right',
  'margin-bottom',
  'margin-left',
  'margin-x',
  'margin-y',
  'margin-block',
  'margin-block-start',
  'margin-block-end',
  'margin-inline',
  'margin-inline-start',
  'margin-inline-end',
  'margin-trim',
  'padding',
  'padding-top',
  'padding-right',
  'padding-bottom',
  'padding-left',
  'padding-x',
  'padding-y',
  'padding-block',
  'padding-block-start',
  'padding-block-end',
  'padding-inline',
  'padding-inline-start',
  'padding-inline-end'
]

export const cssSizing: string[] = [
  'box-sizing',
  'block-size',
  'width',
  'min-width',
  'max-width',
  'width-basis',
  'height',
  'min-height',
  'max-height',
  'height-basis'
]

export const cssTypography: string[] = [
  'font',
  'font-family',
  'font-size',
  'font-weight',
  'font-style',
  'font-variant',
  'font-size-adjust',
  'font-stretch',
  'line-height',
  'text-align',
  'text-align-last',
  'vertical-align',
  'white-space',
  'text-decoration',
  'text-emphasis',
  'text-emphasis-color',
  'text-emphasis-style',
  'text-emphasis-position',
  'text-indent',
  'text-justify',
  'letter-spacing',
  'word-spacing',
  'text-transform',
  'text-overflow',
  'word-wrap',
  'word-break',

  'font-feature-settings',
  'font-kerning',
  'font-language-override',
  'font-optical-sizing',
  'font-synthesis',
  'font-variant-alternates',
  'font-variant-caps',
  'font-variant-east-asian',
  'font-variant-ligatures',
  'font-variant-numeric',
  'font-variant-position',
  'font-variation-settings',

  'hanging-punctuation'
]

export const cssTypographyList: string[] = [
  'list-style',
  'list-style-position',
  'list-style-type',
  'list-style-image'
]

export const cssContent: string[] = [
  'contain',
  'content',
  'content-visibility',
  'quotes',
  'counter-set',
  'counter-reset',
  'counter-increment',
  'tab-size',
  'hyphens'
]

export const cssBorder: string[] = [
  'border-radius',
  'border-top-left-radius',
  'border-top-right-radius',
  'border-bottom-right-radius',
  'border-bottom-left-radius',
  'border-start-start-radius',
  'border-start-end-radius',
  'border-end-start-radius',
  'border-end-end-radius',

  'border',
  'border-width',
  'border-style',
  'border-color',
  'border-opacity',
  'border-top',
  'border-top-width',
  'border-top-style',
  'border-top-color',
  'border-right',
  'border-right-width',
  'border-right-style',
  'border-right-color',
  'border-bottom',
  'border-bottom-width',
  'border-bottom-style',
  'border-bottom-color',
  'border-left',
  'border-left-width',
  'border-left-style',
  'border-left-color',

  'border-image',
  'border-image-source',
  'border-image-slice',
  'border-image-width',
  'border-image-outset',
  'border-image-repeat',

  'border-block',
  'border-block-width',
  'border-block-color',
  'border-block-style',
  'border-block-start',
  'border-block-start-width',
  'border-block-start-color',
  'border-block-start-style',
  'border-block-end',
  'border-block-end-width',
  'border-block-end-color',
  'border-block-end-style',

  'border-inline',
  'border-inline-width',
  'border-inline-color',
  'border-inline-style',
  'border-inline-end',
  'border-inline-end-width',
  'border-inline-end-color',
  'border-inline-end-style',
  'border-inline-start',
  'border-inline-start-width',
  'border-inline-start-color',
  'border-inline-start-style',

  'outline',
  'outline-width',
  'outline-style',
  'outline-color',
  'outline-offset'
]

export const cssBorderMask: string[] = [
  'mask-border',
  'mask-border-mode',
  'mask-border-source',
  'mask-border-slice',
  'mask-border-width',
  'mask-border-outset',
  'mask-border-repeat'
]

export const cssColor: string[] = [
  'color-scheme',
  'opacity',
  'color',
  'color-opacity',
  'accent-color',
  'forced-color-adjust'
]

export const cssBackgrounds: string[] = [
  'background',
  'background-color',
  'background-opacity',
  'background-image',
  'background-repeat',
  'background-attachment',
  'background-position',
  'background-position-x',
  'background-position-y',
  'background-clip',
  'background-origin',
  'background-size',
  'gradient',
  'gradient-opacity'
]

export const cssMask: string[] = [
  'mask',
  'mask-type',
  'mask-mode',
  'mask-composite',
  'mask-image',
  'mask-repeat',
  'mask-position',
  'mask-clip',
  'mask-origin',
  'mask-size'
]

export const cssEffects: string[] = [
  'box-decoration-break',
  'box-shadow',
  'text-shadow',
  'clip-path',
  'clip-rule',
  'filter',
  'backdrop-filter',
  'backface-visibility',
  'background-blend-mode'
]

export const cssTables: string[] = [
  'table-layout',
  'empty-cells',
  'caption-side',
  'border-spacing',
  'border-collapse'
]

export const cssTransforms: string[] = [
  'transition',
  'transition-delay',
  'transition-timing-function',
  'transition-duration',
  'transition-property',
  'transform',
  'transform-origin',
  'animation',
  'animation-name',
  'animation-duration',
  'animation-play-state',
  'animation-timing-function',
  'animation-fill-mode',
  'animation-delay',
  'animation-iteration-count',
  'animation-direction',

  'animation-timeline'
]

export const cssInteractivity: string[] = [
  'resize',
  'cursor',
  'user-select',
  'caret-color',
  'pointer-events'
]

export const cssScrolls: string[] = [
  'scroll-behavior',
  'scroll-margin',
  'scroll-margin-top',
  'scroll-margin-right',
  'scroll-margin-bottom',
  'scroll-margin-left',
  'scroll-margin-block',
  'scroll-margin-block-start',
  'scroll-margin-block-end',
  'scroll-margin-inline',
  'scroll-margin-inline-start',
  'scroll-margin-inline-end',
  'scroll-padding',
  'scroll-padding-top',
  'scroll-padding-right',
  'scroll-padding-bottom',
  'scroll-padding-left',
  'scroll-padding-block',
  'scroll-padding-block-start',
  'scroll-padding-block-end',
  'scroll-padding-inline',
  'scroll-padding-inline-start',
  'scroll-padding-inline-end',
  'scroll-snap-type',
  'scroll-snap-align',
  'scroll-snap-stop'
]

export const cssSVG: string[] = [
  'fill',
  'flood-color',
  'flood-opacity'
]

export const cssOther: string[] = [
  'break-inside',
  'break-after',
  'break-before'
]

export const cssExperimental: string[] = [
  'align-tracks',
  'color-interpolation-filters'
]

export const cssDifferent: string[] = [
  'all',
  'clamp',
  'cue',
  'cue-after',
  'cue-before',
  'globalcompositeoperation'
]

export const cssDeprecated: string[] = [
  'glyph-orientation-vertical'
]

export const css: string[] = [
  ...cssLayout,
  ...cssFlexbox,
  ...cssColumns,
  ...cssSpacing,
  ...cssSizing,
  ...cssTypography,
  ...cssTypographyList,
  ...cssContent,
  ...cssBorder,
  ...cssBorderMask,
  ...cssColor,
  ...cssBackgrounds,
  ...cssMask,
  ...cssEffects,
  ...cssTables,
  ...cssTransforms,
  ...cssInteractivity,
  ...cssScrolls,
  ...cssSVG,
  ...cssOther,
  ...cssExperimental,
  ...cssDifferent,
  ...cssDeprecated,
  'horizon',
  'hyphenate-character',
  'image-orientation',
  'image-rendering',
  'image-resolution',
  'inherit',
  'initial',
  'initial-letter',
  'initial-letter-align',
  'initial-value',
  'inline-size',
  'isolation',
  'justify-items',
  'justify-self',
  'justify-tracks',
  'lighting-color',
  'line-break',
  'line-height-step',
  'masonry-auto-flow',
  'math-style',
  'max-block-size',
  'max-inline-size',
  'max-zoom',
  'min-block-size',
  'min-inline-size',
  'min-zoom',
  'mix-blend-mode',
  'offset',
  'offset-anchor',
  'offset-distance',
  'offset-path',
  'offset-position',
  'offset-rotate',
  'object-fit',
  'object-position',
  'orphans',
  'overflow-anchor',
  'overflow-block',
  'overflow-clip-margin',
  'overflow-inline',
  'overflow-wrap',
  'overscroll-behavior',
  'overscroll-behavior-block',
  'overscroll-behavior-inline',
  'overscroll-behavior-x',
  'overscroll-behavior-y',
  'page-break-after',
  'page-break-before',
  'page-break-inside',
  'paint-order',
  'palette',
  'palette-color',
  'palette-stroke',
  'palette-background',
  'palette-fill',
  'palette-border',
  'palette-gradient',
  'pause',
  'pause-after',
  'pause-before',
  'pitch',
  'pitch-range',
  'place-content',
  'place-items',
  'place-self',
  'play-during',
  'perspective',
  'perspective-origin',
  'print-color-adjust',
  'rest',
  'rest-after',
  'rest-before',
  'richness',
  'rotate',
  'row-gap',
  'ruby-align',
  'ruby-position',
  'scale',
  'scrollbar-color',
  'scrollbar-gutter',
  'scrollbar-width',
  'shape-image-threshold',
  'shape-margin',
  'shape-outside',
  'speak',
  'speak-as',
  'speak-header',
  'speak-numeral',
  'speak-punctuation',
  'speech-rate',
  'stress',
  'stroke',
  'stroke-opacity',
  'stroke-dasharray',
  'stroke-dashoffset',
  'stroke-linecap',
  'stroke-width',
  'squared',
  'text-align-all',
  'text-combine-upright',
  'text-decoration-color',
  'text-decoration-line',
  'text-decoration-skip',
  'text-decoration-skip-ink',
  'text-decoration-style',
  'text-decoration-thickness',
  'text-orientation',
  'text-rendering',
  'text-select-none',
  'text-underline-offset',
  'text-underline-position',
  'touch-action',
  'touch-callout',
  'transform-box',
  'transform-style',
  'translate-x',
  'translate-y',
  'unicode-bidi',
  'unset',
  'vertically',
  'voice-balance',
  'voice-duration',
  'voice-family',
  'voice-pitch',
  'voice-range',
  'voice-rate',
  'voice-stress',
  'voice-volume',
  'volume',
  'widows',
  'will-change',
  'writing-mode'
]
