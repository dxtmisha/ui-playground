"use strict";var y=Object.defineProperty;var p=(r,t,s)=>t in r?y(r,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[t]=s;var a=(r,t,s)=>(p(r,typeof t!="symbol"?t+"":t,s),s);const c=require("./string-BsLl7qfq.cjs"),u=require("./CacheItem-C85ixkdu.cjs"),g=require("./useEnv-BT5bxpHr.cjs");class n{static isLocalhost(){return location.hostname==="localhost"}static getHeaders(t,s="application/json;charset=UTF-8"){if(t!==null){const i={...t||{}};return s&&(i["Content-Type"]=s),i}}static getUrl(t){return`${this.isLocalhost()?this.urlLocalhost:this.url}${t}`.replace("{locale}",u.Geo.getLocation()).replace("{country}",u.Geo.getCountry()).replace("{language}",u.Geo.getLanguage())}static getUrlByCommand(t){return this.isLocalhost()?`${this.urlCommand}/${t}.json`:`${this.urlCommand}/?command=${t}`}static getBody(t){if(c.isFilled(t))return t instanceof FormData||c.isString(t)?t:JSON.stringify(t)}static async response(t){return c.isString(t)?await this.fetch({path:t}):await this.fetch(t)}static async responseByCommand(t,s){return await this.fetch({path:this.getUrlByCommand(t),...s??{}})}static async fetch({path:t="",method:s="GET",request:i=void 0,headers:o={},type:h="application/json;charset=UTF-8",init:m={}}){try{const l=this.getHeaders(o,h),f=l&&s==="GET"?"POST":s;return await(await fetch(this.getUrl(t),{...m,method:f,headers:l,body:this.getBody(i)})).json()}catch(l){console.error(l)}return{}}}a(n,"url",g.useEnv("api","/")),a(n,"urlLocalhost",`${g.useEnv("BASE_URL","/")}public/`),a(n,"urlCommand","ui");const e=class e{static is(t){return t in this.icons||this.getName(t)in this.icons}static async get(t,s=""){var o,h;const i=((o=this.icons)==null?void 0:o[this.getName(t)])??((h=this.icons)==null?void 0:h[t])??`${t.replace(/^@/,s??this.url)}.svg`;return typeof i=="string"?i:await i}static getNameList(){return c.forEach(this.icons,(t,s)=>s.replace(/^@/,""))}static add(t,s){this.icons[this.getName(t)]=s}static addGlobal(t,s){this.icons[this.getName(t)]=`${this.urlGlobal}${s}`}static addByList(t){c.forEach(t,(s,i)=>this.add(i,s))}static getName(t){return`@${t}`}};a(e,"icons",{}),a(e,"url",g.useEnv("UI_PATH")??"/icons/"),a(e,"urlGlobal",`${n.isLocalhost(),""}${e.url}`);let d=e;exports.Api=n;exports.Icons=d;
