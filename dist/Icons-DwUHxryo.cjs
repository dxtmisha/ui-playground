"use strict";var L=Object.defineProperty;var M=(c,$,a)=>$ in c?L(c,$,{enumerable:!0,configurable:!0,writable:!0,value:a}):c[$]=a;var e=(c,$,a)=>(M(c,typeof $!="symbol"?$+"":$,a),a);const r=require("./object-D6teWcGS.cjs"),l=require("./GeoIntl-CVqQwIGP.cjs"),m=require("./useEnv-EK603Ktm.cjs");class g{static isLocalhost(){return location.hostname==="localhost"}static getHeaders($,a="application/json;charset=UTF-8"){if($!==null){const s={...$||{}};return a&&(s["Content-Type"]=a),s}}static getUrl($){return`${this.isLocalhost()?this.urlLocalhost:this.url}${$}`.replace("{locale}",l.Geo.getLocation()).replace("{country}",l.Geo.getCountry()).replace("{language}",l.Geo.getLanguage())}static getUrlByCommand($){return this.isLocalhost()?`${this.urlCommand}/${$}.json`:`${this.urlCommand}/?command=${$}`}static getBody($){if(r.isFilled($))return $ instanceof FormData||r.isString($)?$:JSON.stringify($)}static async response($){return r.isString($)?await this.fetch({path:$}):await this.fetch($)}static async responseByCommand($,a){return await this.fetch({path:this.getUrlByCommand($),...a??{}})}static async fetch({path:$="",method:a="GET",request:s=void 0,headers:i={},type:h="application/json;charset=UTF-8",init:f={}}){try{const u=this.getHeaders(i,h),C=u&&a==="GET"?"POST":a;return await(await fetch(this.getUrl($),{...f,method:C,headers:u,body:this.getBody(s)})).json()}catch(u){console.error(u)}return{}}}e(g,"url",m.useEnv("api","/")),e(g,"urlLocalhost",`${m.useEnv("BASE_URL","/")}public/`),e(g,"urlCommand","ui");const t="@flag",o=class o{constructor($=l.Geo.getLocation()){this.code=$}get($=this.code){var s;const a=l.Geo.find($);if(a){const i=this.getCountry(a);return{language:this.getLanguage(a),country:i,standard:a.standard,icon:(s=o.flags)==null?void 0:s[a.country],label:i,value:a.country}}}getFlag($=this.code){var a;return(a=this.get($))==null?void 0:a.icon}getList($){return r.forEach(this.getCodes($),a=>this.get(a))}getNational($){return r.forEach(this.getList($),a=>{const s=new o(a.language).get(a.standard);return{...a,nationalLanguage:s==null?void 0:s.language,nationalCountry:s==null?void 0:s.country}})}setCode($){return this.code=$,this}getLocation(){return new l.GeoIntl(this.code)}getCodes($){return $??Object.keys(o.flags)}getLanguage($){return this.getLocation().languageName($.language)}getCountry($){return this.getLocation().countryName($.country)}};e(o,"flags",{AD:`${t}-ad`,AE:`${t}-ae`,AF:`${t}-af`,AG:`${t}-ag`,AI:`${t}-ai`,AL:`${t}-al`,AM:`${t}-am`,AN:`${t}-an`,AO:`${t}-ao`,AQ:`${t}-aq`,AR:`${t}-ar`,AS:`${t}-as`,AT:`${t}-at`,AU:`${t}-au`,AW:`${t}-aw`,AX:`${t}-ax`,AZ:`${t}-az`,BA:`${t}-ba`,BB:`${t}-bb`,BD:`${t}-bd`,BE:`${t}-be`,BF:`${t}-bf`,BG:`${t}-bg`,BH:`${t}-bh`,BI:`${t}-bi`,BJ:`${t}-bj`,BL:`${t}-bl`,BM:`${t}-bm`,BN:`${t}-bn`,BO:`${t}-bo`,BQ:`${t}-bq`,BR:`${t}-br`,BS:`${t}-bs`,BT:`${t}-bt`,BV:`${t}-bv`,BW:`${t}-bw`,BY:`${t}-by`,BZ:`${t}-bz`,CA:`${t}-ca`,CC:`${t}-cc`,CD:`${t}-cd`,CF:`${t}-cf`,CG:`${t}-cg`,CH:`${t}-ch`,CI:`${t}-ci`,CK:`${t}-ck`,CL:`${t}-cl`,CM:`${t}-cm`,CN:`${t}-cn`,CO:`${t}-co`,CR:`${t}-cr`,CU:`${t}-cu`,CV:`${t}-cv`,CW:`${t}-cw`,CX:`${t}-cx`,CY:`${t}-cy`,CZ:`${t}-cz`,DE:`${t}-de`,DJ:`${t}-dj`,DK:`${t}-dk`,DM:`${t}-dm`,DO:`${t}-do`,DZ:`${t}-dz`,EC:`${t}-ec`,EE:`${t}-ee`,EG:`${t}-eg`,EH:`${t}-eh`,ER:`${t}-er`,ES:`${t}-es`,ET:`${t}-et`,FI:`${t}-fi`,FJ:`${t}-fj`,FK:`${t}-fk`,FM:`${t}-fm`,FO:`${t}-fo`,FR:`${t}-fr`,GA:`${t}-ga`,GB:`${t}-gb`,GD:`${t}-gd`,GE:`${t}-ge`,GF:`${t}-gf`,GG:`${t}-gg`,GH:`${t}-gh`,GI:`${t}-gi`,GL:`${t}-gl`,GM:`${t}-gm`,GN:`${t}-gn`,GP:`${t}-gp`,GQ:`${t}-gq`,GR:`${t}-gr`,GT:`${t}-gt`,GU:`${t}-gu`,GW:`${t}-gw`,GY:`${t}-gy`,HK:`${t}-hk`,HM:`${t}-hm`,HN:`${t}-hn`,HR:`${t}-hr`,HT:`${t}-ht`,HU:`${t}-hu`,ID:`${t}-id`,IE:`${t}-ie`,IL:`${t}-il`,IM:`${t}-im`,IN:`${t}-in`,IO:`${t}-io`,IQ:`${t}-iq`,IR:`${t}-ir`,IS:`${t}-is`,IT:`${t}-it`,JE:`${t}-je`,JM:`${t}-jm`,JO:`${t}-jo`,JP:`${t}-jp`,KE:`${t}-ke`,KG:`${t}-kg`,KH:`${t}-kh`,KI:`${t}-ki`,KM:`${t}-km`,KN:`${t}-kn`,KP:`${t}-kp`,KR:`${t}-kr`,KW:`${t}-kw`,KY:`${t}-ky`,KZ:`${t}-kz`,LA:`${t}-la`,LB:`${t}-lb`,LC:`${t}-lc`,LI:`${t}-li`,LK:`${t}-lk`,LR:`${t}-lr`,LS:`${t}-ls`,LT:`${t}-lt`,LU:`${t}-lu`,LV:`${t}-lv`,LY:`${t}-ly`,MA:`${t}-ma`,MC:`${t}-mc`,MD:`${t}-md`,ME:`${t}-me`,MF:`${t}-mf`,MG:`${t}-mg`,MH:`${t}-mh`,MK:`${t}-mk`,ML:`${t}-ml`,MM:`${t}-mm`,MN:`${t}-mn`,MO:`${t}-mo`,MP:`${t}-mp`,MQ:`${t}-mq`,MR:`${t}-mr`,MS:`${t}-ms`,MT:`${t}-mt`,MU:`${t}-mu`,MV:`${t}-mv`,MW:`${t}-mw`,MX:`${t}-mx`,MY:`${t}-my`,MZ:`${t}-mz`,NA:`${t}-na`,NC:`${t}-nc`,NE:`${t}-ne`,NF:`${t}-nf`,NG:`${t}-ng`,NI:`${t}-ni`,NL:`${t}-nl`,NO:`${t}-no`,NP:`${t}-np`,NR:`${t}-nr`,NU:`${t}-nu`,NZ:`${t}-nz`,OM:`${t}-om`,PA:`${t}-pa`,PE:`${t}-pe`,PF:`${t}-pf`,PG:`${t}-pg`,PH:`${t}-ph`,PK:`${t}-pk`,PL:`${t}-pl`,PM:`${t}-pm`,PN:`${t}-pn`,PR:`${t}-pr`,PS:`${t}-ps`,PT:`${t}-pt`,PW:`${t}-pw`,PY:`${t}-py`,QA:`${t}-qa`,RE:`${t}-re`,RO:`${t}-ro`,RS:`${t}-rs`,RU:`${t}-ru`,RW:`${t}-rw`,SA:`${t}-sa`,SB:`${t}-sb`,SC:`${t}-sc`,SD:`${t}-sd`,SE:`${t}-se`,SG:`${t}-sg`,SH:`${t}-sh`,SI:`${t}-si`,SJ:`${t}-sj`,SK:`${t}-sk`,SL:`${t}-sl`,SM:`${t}-sm`,SN:`${t}-sn`,SO:`${t}-so`,SR:`${t}-sr`,SS:`${t}-ss`,ST:`${t}-st`,SV:`${t}-sv`,SX:`${t}-sx`,SY:`${t}-sy`,SZ:`${t}-sz`,TC:`${t}-tc`,TD:`${t}-td`,TG:`${t}-tg`,TH:`${t}-th`,TJ:`${t}-tj`,TK:`${t}-tk`,TL:`${t}-tl`,TM:`${t}-tm`,TN:`${t}-tn`,TO:`${t}-to`,TR:`${t}-tr`,TT:`${t}-tt`,TV:`${t}-tv`,TW:`${t}-tw`,TZ:`${t}-tz`,UA:`${t}-ua`,UG:`${t}-ug`,US:`${t}-us`,UY:`${t}-uy`,UZ:`${t}-uz`,VA:`${t}-va`,VC:`${t}-vc`,VE:`${t}-ve`,VG:`${t}-vg`,VI:`${t}-vi`,VN:`${t}-vn`,VU:`${t}-vu`,WF:`${t}-wf`,WS:`${t}-ws`,YE:`${t}-ye`,YT:`${t}-yt`,ZA:`${t}-za`,ZM:`${t}-zm`,ZW:`${t}-zw`});let d=o;const n=class n{static is($){return $ in this.icons||this.getName($)in this.icons}static async get($,a=""){var i,h;this.isFlag($)&&await this.makeFlags();const s=((i=this.icons)==null?void 0:i[this.getName($)])??((h=this.icons)==null?void 0:h[$])??`${$.replace(/^@/,a??this.url)}.svg`;return typeof s=="string"?s:await s}static getNameList(){return r.forEach(this.icons,($,a)=>a.replace(/^@/,""))}static add($,a){this.icons[this.getName($)]=a}static addGlobal($,a){this.icons[this.getName($)]=`${this.urlGlobal}${a}`}static addByList($){r.forEach($,(a,s)=>this.add(s,a))}static isFlag($){return!!$.match(t)}static getName($){return`@${$}`}static makeFlags(){return new Promise($=>{switch(this.flags){case"init":this.makeFlagsWait($);break;case"none":this.flags="init",Promise.resolve().then(()=>require("./flags-DbwmwnCX.cjs")).then(a=>{a.makeFlagsGlobal(),this.flags="read",$()});break}})}static makeFlagsWait($){const a=setInterval(()=>{this.flags==="read"&&(clearInterval(a),$())},64)}};e(n,"icons",{}),e(n,"url",m.useEnv("UI_PATH")??"/icons/"),e(n,"urlGlobal",`${g.isLocalhost(),""}${n.url}`),e(n,"flags","none");let G=n;exports.Api=g;exports.GEO_FLAG_ICON_NAME=t;exports.GeoFlag=d;exports.Icons=G;
