import { ComponentsItems } from './ComponentsItems.ts'

import { PropertiesFile } from '../properties/PropertiesFile.ts'

import classes from './../../allList.ts'
import functions from './../../../functions/allList.ts'

import {
  COMPONENTS_DIR,
  COMPONENTS_FILE,
  COMPONENTS_MAIN,
  COMPONENTS_REGISTRATION
} from '../../../types/components.ts'

/**
 * Class for working with the main files.<br>
 * Класс для работы с главными файлами.
 */
export class ComponentsMain {
  /**
   * Constructor
   * @param items object for working with the list of components /<br>объект для работы со списком компонентов
   */
  // eslint-disable-next-line no-useless-constructor
  constructor (
    protected readonly items: ComponentsItems
  ) {
  }

  /**
   * Export data for the main file.<br>
   * Экспортировать данные для главного файла.
   */
  make (): this {
    PropertiesFile.write(
      [COMPONENTS_DIR],
      COMPONENTS_MAIN,
      [
        '// This file is generated by a script, do not edit.',
        '// Этот файл генерируется скриптом, не редактировать.',
        '',
        'import * as classes from \'./../classes/all.ts\'',
        'import * as functions from \'./../functions/all.ts\'',
        `import * as components from './${COMPONENTS_FILE}.ts'`,
        '',
        `export { ${COMPONENTS_REGISTRATION} } from './${COMPONENTS_REGISTRATION}.ts'`,
        '',
        '// Classes',
        ...this.initClasses(),
        '',
        '// Functions',
        ...this.initFunctions(),
        '',
        '// Components',
        ...this.initComponents(),
        ''
      ].join('\r\n'),
      'ts'
    )

    return this
  }

  /**
   * Initializes the list of available classes.<br>
   * Инициализирует список доступных классов.
   */
  protected initClasses (): string[] {
    const data: string[] = []

    classes.forEach(name => data.push(`export const ${name} = classes.${name}`))

    return data
  }

  /**
   * Initializes the list of available functions.<br>
   * Инициализирует список доступных функций.
   */
  protected initFunctions (): string[] {
    const data: string[] = []

    functions.forEach(name => data.push(`export const ${name} = functions.${name}`))

    return data
  }

  /**
   * Initializes the list of available components.<br>
   * Инициализирует список доступных компонентов.
   */
  protected initComponents (): string[] {
    const data: string[] = []

    this.items
      .getComponentList()
      .forEach(({ codeFull }) => data.push(`export const ${codeFull} = components.${codeFull}`))

    return data
  }
}
